# Production Environment Configuration
# Copy to .env and update with your actual values

# ================================
# CORE APPLICATION SETTINGS
# ================================
ENVIRONMENT=production
TRAFFIC_DEBUG_MODE=false
TRAFFIC_LOG_LEVEL=WARNING
TRAFFIC_APPLICATION_NAME="AI Traffic Management System"
TRAFFIC_APPLICATION_VERSION="2.0.0"

# ================================
# API CONFIGURATION
# ================================
TRAFFIC_API_HOST=0.0.0.0
TRAFFIC_API_PORT=8000
TRAFFIC_API_PREFIX=/api

# ================================
# SECURITY CONFIGURATION
# CRITICAL: Change these values!
# ================================
TRAFFIC_JWT_SECRET_KEY=your_super_secure_jwt_secret_key_minimum_32_characters_long_change_this
TRAFFIC_JWT_ALGORITHM=HS256
TRAFFIC_JWT_EXPIRATION_HOURS=24

# ================================
# CORS SETTINGS (Production)
# ================================
TRAFFIC_ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
TRAFFIC_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
TRAFFIC_ALLOWED_HEADERS=*

# ================================
# AI MODEL CONFIGURATION
# ================================
TRAFFIC_MODEL_NAME=yolov8s.pt
TRAFFIC_DETECTION_CONFIDENCE_THRESHOLD=0.5
TRAFFIC_NON_MAX_SUPPRESSION_THRESHOLD=0.45
TRAFFIC_ENABLE_GPU_ACCELERATION=false
TRAFFIC_MODEL_CACHE_DIRECTORY=/app/models

# ================================
# DATABASE CONNECTIONS
# ================================
# Redis Configuration
TRAFFIC_REDIS_CONNECTION_STRING=redis://redis:6379
TRAFFIC_REDIS_CACHE_TTL=3600

# MongoDB Configuration
TRAFFIC_MONGODB_CONNECTION_STRING=mongodb://admin:your_mongodb_password@mongodb:27017/traffic_management?authSource=admin
TRAFFIC_DATABASE_NAME=traffic_management

# ================================
# TRAFFIC MANAGEMENT SETTINGS
# ================================
TRAFFIC_DEFAULT_GREEN_SIGNAL_DURATION=30
TRAFFIC_YELLOW_SIGNAL_DURATION=3
TRAFFIC_MINIMUM_GREEN_DURATION=10
TRAFFIC_MAXIMUM_GREEN_DURATION=120

# ================================
# EMERGENCY RESPONSE SETTINGS
# ================================
TRAFFIC_EMERGENCY_OVERRIDE_DURATION=60
TRAFFIC_EMERGENCY_DETECTION_ENABLED=true

# ================================
# PERFORMANCE SETTINGS
# ================================
TRAFFIC_MAX_CONCURRENT_REQUESTS=100
TRAFFIC_REQUEST_TIMEOUT_SECONDS=30
TRAFFIC_WEBSOCKET_HEARTBEAT_INTERVAL=30

# ================================
# LOGGING CONFIGURATION
# ================================
TRAFFIC_ENABLE_FILE_LOGGING=true
TRAFFIC_LOG_FILE_PATH=/app/logs/traffic_system.log
TRAFFIC_LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# ================================
# MONITORING & OBSERVABILITY
# ================================
# Prometheus metrics endpoint: /metrics
# Health check endpoint: /health
# System info endpoint: /api/system/info

# ================================
# EXTERNAL SERVICE INTEGRATIONS
# ================================
# Add your external service configurations here
# Example: Weather API, Traffic API, etc.

# ================================
# DEPLOYMENT PLATFORM SPECIFIC
# ================================
# Uncomment and configure based on your deployment platform

# For Railway
# PORT=$PORT

# For Render
# TRAFFIC_API_PORT=$PORT

# For AWS/GCP/Azure
# Add cloud-specific configurations

# ================================
# BACKUP AND MAINTENANCE
# ================================
TRAFFIC_BACKUP_ENABLED=true
TRAFFIC_BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
TRAFFIC_LOG_RETENTION_DAYS=30

# ================================
# FEATURE FLAGS
# ================================
TRAFFIC_ENABLE_ANALYTICS=true
TRAFFIC_ENABLE_WEBSOCKETS=true
TRAFFIC_ENABLE_METRICS=true
TRAFFIC_ENABLE_RATE_LIMITING=true

# ================================
# DEVELOPMENT/STAGING OVERRIDES
# ================================
# Uncomment for development/staging environments
# TRAFFIC_DEBUG_MODE=true
# TRAFFIC_LOG_LEVEL=DEBUG
# TRAFFIC_ALLOWED_ORIGINS=*

# ================================
# SECRETS MANAGEMENT
# ================================
# In production, consider using:
# - Docker secrets
# - Kubernetes secrets
# - Cloud provider secret managers (AWS Secrets Manager, GCP Secret Manager, Azure Key Vault)
# - HashiCorp Vault
# - Environment-specific secret injection